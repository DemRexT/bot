// Code generated by mfd-generator v0.4.5; DO NOT EDIT.

//nolint:all
//lint:file-ignore U1000 ignore unused code, it's generated
package db

import (
	"time"
)

var Columns = struct {
	Company struct {
		ID, Name, TgID, Scope, StatusID, UserName, Inn, Phone, CreatedAt string
	}
	Student struct {
		ID, TgID, Name, City, Scope, Email, StatusID, Birthday, CreatedAt string
	}
	Task struct {
		ID, CompanyID, Scope, Description, Link, ContactSlot, StatusID, StudentID, Budget, YougileID, Name, Deadline, Url, CreatedAt string

		Company, Student string
	}
}{
	Company: struct {
		ID, Name, TgID, Scope, StatusID, UserName, Inn, Phone, CreatedAt string
	}{
		ID:        "companyId",
		Name:      "name",
		TgID:      "tgId",
		Scope:     "scope",
		StatusID:  "statusId",
		UserName:  "userName",
		Inn:       "inn",
		Phone:     "phone",
		CreatedAt: "createdAt",
	},
	Student: struct {
		ID, TgID, Name, City, Scope, Email, StatusID, Birthday, CreatedAt string
	}{
		ID:        "studentId",
		TgID:      "tgId",
		Name:      "name",
		City:      "city",
		Scope:     "scope",
		Email:     "email",
		StatusID:  "statusId",
		Birthday:  "birthday",
		CreatedAt: "createdAt",
	},
	Task: struct {
		ID, CompanyID, Scope, Description, Link, ContactSlot, StatusID, StudentID, Budget, YougileID, Name, Deadline, Url, CreatedAt string

		Company, Student string
	}{
		ID:          "taskId",
		CompanyID:   "companyId",
		Scope:       "scope",
		Description: "description",
		Link:        "link",
		ContactSlot: "contactSlot",
		StatusID:    "statusId",
		StudentID:   "studentId",
		Budget:      "budget",
		YougileID:   "yougileId",
		Name:        "name",
		Deadline:    "deadline",
		Url:         "url",
		CreatedAt:   "createdAt",

		Company: "Company",
		Student: "Student",
	},
}

var Tables = struct {
	Company struct {
		Name, Alias string
	}
	Student struct {
		Name, Alias string
	}
	Task struct {
		Name, Alias string
	}
}{
	Company: struct {
		Name, Alias string
	}{
		Name:  "companies",
		Alias: "t",
	},
	Student: struct {
		Name, Alias string
	}{
		Name:  "students",
		Alias: "t",
	},
	Task: struct {
		Name, Alias string
	}{
		Name:  "tasks",
		Alias: "t",
	},
}

type Company struct {
	tableName struct{} `pg:"companies,alias:t,discard_unknown_columns"`

	ID        int       `pg:"companyId,pk"`
	Name      string    `pg:"name,use_zero"`
	TgID      int64     `pg:"tgId,use_zero"`
	Scope     string    `pg:"scope,use_zero"`
	StatusID  int       `pg:"statusId,use_zero"`
	UserName  string    `pg:"userName,use_zero"`
	Inn       string    `pg:"inn,use_zero"`
	Phone     string    `pg:"phone,use_zero"`
	CreatedAt time.Time `pg:"createdAt,use_zero"`
}

type Student struct {
	tableName struct{} `pg:"students,alias:t,discard_unknown_columns"`

	ID        int       `pg:"studentId,pk"`
	TgID      int64     `pg:"tgId,use_zero"`
	Name      string    `pg:"name,use_zero"`
	City      string    `pg:"city,use_zero"`
	Scope     string    `pg:"scope,use_zero"`
	Email     string    `pg:"email,use_zero"`
	StatusID  int       `pg:"statusId,use_zero"`
	Birthday  string    `pg:"birthday,use_zero"`
	CreatedAt time.Time `pg:"createdAt,use_zero"`
}

type Task struct {
	tableName struct{} `pg:"tasks,alias:t,discard_unknown_columns"`

	ID          int       `pg:"taskId,pk"`
	CompanyID   int       `pg:"companyId,use_zero"`
	Scope       string    `pg:"scope,use_zero"`
	Description string    `pg:"description,use_zero"`
	Link        string    `pg:"link,use_zero"`
	ContactSlot string    `pg:"contactSlot,use_zero"`
	StatusID    int       `pg:"statusId,use_zero"`
	StudentID   *int      `pg:"studentId"`
	Budget      float64   `pg:"budget,use_zero"`
	YougileID   *string   `pg:"yougileId"`
	Name        *string   `pg:"name"`
	Deadline    string    `pg:"deadline,use_zero"`
	Url         *string   `pg:"url"`
	CreatedAt   time.Time `pg:"createdAt,use_zero"`

	Company *Company `pg:"fk:companyId,rel:has-one"`
	Student *Student `pg:"fk:studentId,rel:has-one"`
}
